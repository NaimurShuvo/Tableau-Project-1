<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0415.1018                               -->
<workbook original-version='18.1' source-build='2025.1.1 (20251.25.0415.1018)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (Sample - Superstore)' inline='true' name='federated.0okurse0gk0n39139e77e1da7749' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1mzod2r1pagp8t11lyfrt129hnwa'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Tableau Project/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='excel-direct.1mzod2r1pagp8t11lyfrt129hnwa' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country/Region' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.1mzod2r1pagp8t11lyfrt129hnwa' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1mzod2r1pagp8t11lyfrt129hnwa' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country/Region]' value='[Orders].[Country/Region]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B801:no:A1:B801:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_74A2F8A376B748779194B671515D68AA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[People_1EB684F6712D426299892E8F579F1EEB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[People_1EB684F6712D426299892E8F579F1EEB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Returns_3FAA76B2C15540E889DBFD56232AE904]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Returns_3FAA76B2C15540E889DBFD56232AE904]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_74A2F8A376B748779194B671515D68AA]' role='measure' type='quantitative' />
      <column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_1EB684F6712D426299892E8F579F1EEB]' role='measure' type='quantitative' />
      <column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_3FAA76B2C15540E889DBFD56232AE904]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Bangladesh&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_74A2F8A376B748779194B671515D68AA'>
            <properties context=''>
              <relation connection='excel-direct.1mzod2r1pagp8t11lyfrt129hnwa' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_1EB684F6712D426299892E8F579F1EEB'>
            <properties context=''>
              <relation connection='excel-direct.1mzod2r1pagp8t11lyfrt129hnwa' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_3FAA76B2C15540E889DBFD56232AE904'>
            <properties context=''>
              <relation connection='excel-direct.1mzod2r1pagp8t11lyfrt129hnwa' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_74A2F8A376B748779194B671515D68AA' />
            <second-end-point object-id='People_1EB684F6712D426299892E8F579F1EEB' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_74A2F8A376B748779194B671515D68AA' />
            <second-end-point object-id='Returns_3FAA76B2C15540E889DBFD56232AE904' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Monthly Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0okurse0gk0n39139e77e1da7749' />
          </datasources>
          <datasource-dependencies datasource='federated.0okurse0gk0n39139e77e1da7749'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0okurse0gk0n39139e77e1da7749].[yr:Order Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0okurse0gk0n39139e77e1da7749].[none:Category:nk] * [federated.0okurse0gk0n39139e77e1da7749].[sum:Sales:qk])</rows>
        <cols>[federated.0okurse0gk0n39139e77e1da7749].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{639382B5-F554-4B61-B85E-12CA275F553D}' />
    </worksheet>
    <worksheet name='Profit Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0okurse0gk0n39139e77e1da7749' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0okurse0gk0n39139e77e1da7749'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0okurse0gk0n39139e77e1da7749].[none:Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Technology&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0okurse0gk0n39139e77e1da7749].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0okurse0gk0n39139e77e1da7749].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Accessories&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0okurse0gk0n39139e77e1da7749].[none:Category:nk]</column>
            <column>[federated.0okurse0gk0n39139e77e1da7749].[none:State:nk]</column>
            <column>[federated.0okurse0gk0n39139e77e1da7749].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0okurse0gk0n39139e77e1da7749].[Longitude (generated)]' field-type='quantitative' max='-7361788.6900813021' min='-13071369.426779704' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0okurse0gk0n39139e77e1da7749].[Latitude (generated)]' field-type='quantitative' max='5543233.1954851951' min='3161322.2049529166' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0okurse0gk0n39139e77e1da7749].[sum:Sales:qk]' />
              <size column='[federated.0okurse0gk0n39139e77e1da7749].[sum:Profit:qk]' />
              <lod column='[federated.0okurse0gk0n39139e77e1da7749].[none:Country/Region:nk]' />
              <lod column='[federated.0okurse0gk0n39139e77e1da7749].[none:State:nk]' />
              <text column='[federated.0okurse0gk0n39139e77e1da7749].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0okurse0gk0n39139e77e1da7749].[Latitude (generated)]</rows>
        <cols>[federated.0okurse0gk0n39139e77e1da7749].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3144F190-16FC-49D0-8B3E-93C93CF138C2}' />
    </worksheet>
    <worksheet name='Sales By Catagory'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0okurse0gk0n39139e77e1da7749' />
          </datasources>
          <datasource-dependencies datasource='federated.0okurse0gk0n39139e77e1da7749'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0okurse0gk0n39139e77e1da7749].[none:Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Technology&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0okurse0gk0n39139e77e1da7749].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0okurse0gk0n39139e77e1da7749].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Accessories&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0okurse0gk0n39139e77e1da7749].[none:Category:nk]</column>
            <column>[federated.0okurse0gk0n39139e77e1da7749].[none:Sub-Category:nk]</column>
            <column>[federated.0okurse0gk0n39139e77e1da7749].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0okurse0gk0n39139e77e1da7749].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0okurse0gk0n39139e77e1da7749].[none:Category:nk] / [federated.0okurse0gk0n39139e77e1da7749].[none:Sub-Category:nk])</rows>
        <cols>[federated.0okurse0gk0n39139e77e1da7749].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{E981EEA1-F545-41F9-9094-35BF8B1712E4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Orders+ (Sample - Superstore)' name='federated.0okurse0gk0n39139e77e1da7749' />
      </datasources>
      <datasource-dependencies datasource='federated.0okurse0gk0n39139e77e1da7749'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='Profit Map' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Monthly Sales' w='43100' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Sales By Catagory' w='39300' x='43900' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='36750' id='6' name='Profit Map' param='[federated.0okurse0gk0n39139e77e1da7749].[none:Sub-Category:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13500' id='7' name='Profit Map' param='[federated.0okurse0gk0n39139e77e1da7749].[none:Category:nk]' type-v2='filter' w='16000' x='83200' y='37750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18250' id='8' name='Profit Map' pane-specification-id='0' param='[federated.0okurse0gk0n39139e77e1da7749].[sum:Profit:qk]' type-v2='size' w='16000' x='83200' y='51250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='9' name='Profit Map' pane-specification-id='0' param='[federated.0okurse0gk0n39139e77e1da7749].[sum:Sales:qk]' type-v2='color' w='16000' x='83200' y='69500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13250' id='11' name='Monthly Sales' pane-specification-id='5' param='[federated.0okurse0gk0n39139e77e1da7749].[yr:Order Date:ok]' type-v2='color' w='16000' x='83200' y='77625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='13' name='Sales By Catagory' pane-specification-id='0' param='[federated.0okurse0gk0n39139e77e1da7749].[sum:Profit:qk]' type-v2='color' w='16000' x='83200' y='90875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='20' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='36750' id='6' mode='checkdropdown' name='Profit Map' param='[federated.0okurse0gk0n39139e77e1da7749].[none:Sub-Category:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13500' id='7' mode='checkdropdown' name='Profit Map' param='[federated.0okurse0gk0n39139e77e1da7749].[none:Category:nk]' type-v2='filter' w='16000' x='83200' y='37750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='1' is-fixed='true' name='Profit Map' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18250' id='8' name='Profit Map' pane-specification-id='0' param='[federated.0okurse0gk0n39139e77e1da7749].[sum:Profit:qk]' type-v2='size' w='16000' x='83200' y='51250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Profit Map' pane-specification-id='0' param='[federated.0okurse0gk0n39139e77e1da7749].[sum:Sales:qk]' type-v2='color' w='16000' x='83200' y='69500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Monthly Sales' w='43100' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='11' name='Monthly Sales' pane-specification-id='5' param='[federated.0okurse0gk0n39139e77e1da7749].[yr:Order Date:ok]' type-v2='color' w='16000' x='83200' y='77625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Sales By Catagory' w='39300' x='43900' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='13' name='Sales By Catagory' pane-specification-id='0' param='[federated.0okurse0gk0n39139e77e1da7749].[sum:Profit:qk]' type-v2='color' w='16000' x='83200' y='90875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C9A52BE4-0A20-430D-82C6-18B57D419F15}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Monthly Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.0okurse0gk0n39139e77e1da7749].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0okurse0gk0n39139e77e1da7749].[mn:Order Date:ok]</field>
            <field>[federated.0okurse0gk0n39139e77e1da7749].[none:Category:nk]</field>
            <field>[federated.0okurse0gk0n39139e77e1da7749].[none:Order ID:nk]</field>
            <field>[federated.0okurse0gk0n39139e77e1da7749].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29D51CA6-B503-4DD6-B647-0C9D3DA20FE3}' />
    </window>
    <window class='worksheet' name='Profit Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0okurse0gk0n39139e77e1da7749].[none:Sub-Category:nk]' type='filter' />
            <card param='[federated.0okurse0gk0n39139e77e1da7749].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0okurse0gk0n39139e77e1da7749].[sum:Profit:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0okurse0gk0n39139e77e1da7749].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0okurse0gk0n39139e77e1da7749].[none:Category:nk]</field>
            <field>[federated.0okurse0gk0n39139e77e1da7749].[none:Country/Region:nk]</field>
            <field>[federated.0okurse0gk0n39139e77e1da7749].[none:State:nk]</field>
            <field>[federated.0okurse0gk0n39139e77e1da7749].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF8EE948-9B3B-49A8-98E8-283CD58B2F96}' />
    </window>
    <window class='worksheet' name='Sales By Catagory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0okurse0gk0n39139e77e1da7749].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0okurse0gk0n39139e77e1da7749].[none:Category:nk]</field>
            <field>[federated.0okurse0gk0n39139e77e1da7749].[none:State:nk]</field>
            <field>[federated.0okurse0gk0n39139e77e1da7749].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9810DDC-8ADB-4F78-BFD4-1232F04A9EDF}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Monthly Sales'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0okurse0gk0n39139e77e1da7749].[yr:Order Date:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Profit Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales By Catagory' />
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true'>
        <device name='Generic Desktop Monitor' type='Desktop' />
        <device name='Nexus 9, 10' type='Tablet' />
      </device-preview>
      <simple-id uuid='{92A5A176-F88B-41F9-B34F-9F0533D09BB3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthly Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOS9V7Bcx5km+B1Xp3xdb+EJASAMBZIg6EnRtChREiV1t9R2emY1MxG7E7v9
      tjER2tiNednYl43dh33ZnZnumW51q41alERvJIhOogMJiARIAIS/9+La8vb4fSj8iaysPKeq
      LoAr9u4fUVHunMw/8+T/5+9TKRQKQSwWAw+O48BxHGiaBtd14XkeAEBVVQRBwK5TVRWKosD3
      ffi+D0VREAQBe8lAURQAQBAEUBSFfSege/nr6L6oNunFX6PrOlRVheM47LparYZUKiVth8ed
      x02Gp+zefq7hcbYsC/F4PHRcvYCfm+sFWVs0pmq1inQ63fFc6TrTNNkasG07tH1VVWGaJlzX
      he/70DQN8Xgcvu+jXq+HzgH1qapqJO7i/It48t/56/RYLNa1IGzbhuu6sCyLLX4CcbKJCGRI
      RSHMf+71APtdfDwB0Gdd1wEArutCURTE43G0Wi14nodsNsvup/tEvHniisKjXwLg8XNdF5qm
      wff9yPtkQAyHx/F6QIY//abrOoIg6MCT7zuVSsFxHMYIRQaoaRo8z2PXBEEATdOQSCTgeR5s
      2w4lniAI4HleTwLg33kcZQTNgy5rUNM0AECr1eoacC+g6/jdQlzwMsRpgDJOFMX9eaAB8py8
      1WrBNE2oqgrbtqHrOsrlMkzThGVZME2zC//1cOSw+RG5voxLDQqyB71eoEVN4xbnna4J24lp
      dzUMA5lMhi1YkiJisRhUVUWr1YLruuw+VVXheR5834dhGLBte+Ddt9f8ycYj3iMlgCAIUK1W
      kUgkEAQBXNeVdiZDTFXVLnGI/9wLWVHM6vfhhnEwVVVhWVYHpx0bGwMA1Go1GIYhHVfUwu0X
      n17jWO/CXe99UcwlDFfZguTB931Uq1Ukk0lGKKZpwjRNNJtNaJqGRqPRJUlomgbLstBoNJBK
      pZi4fSPEORnwxMxD6A5gmiY0TUMsFoPjOF0yFC1WUewArhEBD/RbP1wvbCvuRUDiVsk/WNd1
      GQ6e50FRFCQSCbRaLcTj8Y5+bwRnvl4C6gXraS9MTIsat2zh888ZaK+XarXKuDoAptuQOC2C
      7/twHAeqqsIwDOi63kUkhFMvfZLHvddcd4nwYRcRVfILWVRORaVR0zSmEAHtCdI0jRFKmL4Q
      BdR+v3JylCwu0z2IcPixy/DslyhkDyzMMLBeQuNxHRSi8AgjDlVVu+aE/6xpGpLJJBNpSJzh
      DRAiNJtN2LbNlOhEIsH0tUHH2K+eJrs2VLOghmgwBLySwys9MoRp0sSJ0zSNEQtBv4smCsIW
      rriN8/8lk0nUarUOLiWb0OtdrP2KkIMA7VzXC1HyNuHNMzF6Edi2jXg8zvQpz/PgeR4SiQRi
      sZh0TfD9OY4DRVEgWiNF/MIgFoshk8l06XO9wDCMcAKgjkWq5BcmTwyi2CNTZHjuKuO04q4y
      yKIjs5q4W/Rqg6xBa2tr0l2GJ6Be0Osacc76xTFsPlRVDTXphuEn4tgP5+y1+3qeh1qtxiw5
      ruuiWq0yC48MD96Erus6FEWRikr9AG+BEiFsPem6jlQqFU4A9NBTqVQXpwmCoMs0RoRC4gQv
      CvGDFrmHqEush+sbhgHDMLqUdfIDiAQomtSCIMDs7Czq9XoH/vz/g+IVBeshcvFaTdPgOA6a
      zaZUdJBBv2KCCJZlsb7pmZO4Q5+bzWYXUYvSA/1OuKiqing8zp4TtSm20w+DaDQaXQQkE9Pj
      8TiSySQ0TUOtVutWgoMggGVZcBwHnuchHo8jlUoxJ4Zt24jFYoyyRVma1wVI8STLDhFFvw89
      jFvxbZCeAXRzKn5XErm4qFQ7jgPDMGBZFpLJJLuWFOuwXSBM2R1kjIMuSNqZaYGtx48wCET5
      evgFLRorDMNANptFrVaTisskOdD8ykzhRCiDQhjh8KZ9QKIE+76PcrmMWq2GZrOJYrHIuEwi
      kUAul0MQBB3U5vs+Wq0Wexii5YDnHlEafRSHEv+jd/IsEsHy4LpuW84TJpZvjwcSocrlcsfv
      g4goYeJd2JjFdmQMQlEUmKYJXdcRi8WYefpG7Ui9gB+XuJuSkUPENwgC5gfI5XId8yE+B3Hu
      1muA4NuX6aWydroIQKaM1Ot1lMtlthVqmha57fIEQluk53ldhCB70GGchjgIT2AEZKYVlV1+
      15GB2J/v+0ilUrAsi+kE/SxinsAGWZSDXOv7PrOqNBqNyLCD9QI/x/yLdncCXpTkF604/7Zt
      Q1EUGIaBdDoduriDoO13Ij+A+Az7nSdSukkCIWkklUrBMAzps+xaxaqqIpvNIh6Po16vs22W
      7Lm0Xem6zuy3zWazY3LCuJiM8geBXgtavA64ZrUSuYDoL+A/j42NQVEU1Ot1pFKpvvAMe7A3
      CmQ28usFXtSgdxnOZOIULTi9wHVduK6LWCzG1ooop5PYDMiV7UFERMdxkEwm0Wg02DqhXT1s
      /kIdYSQ68BPCa9rUIO8kMwyDdep5HhNPeCBZT5QXZQOn63uBqLDKRK9BtlXewWNZFtsRxQUT
      hUMvvKMe7KA6wXpBpheFjY12IBG/MHFX/F92raIoTHS2bZu1v16dhqxBxLRIcqCYKxkRhMox
      ZF0hBMOAR5aoWSQacVJ5xTQMosQjXrmlrY13uIg7ADn0ZNwrCodkMolKpYJYLBb5YGXQa4eT
      WUeuZ8dQVRW6rncwpF7QL6GZpol6vR4q9kYt/kajAcMwWGwQ/5+iKB0WpjAz5iAEQeEtvu+z
      cAwZbgShBKAobZNRLBZjJq5GoxHZeRAESCQSME0TjuPAsqyuzsXtbr2iEBtAyEPnFzxRPhEG
      BcL1AkVRUCqVkMlkukSpQXCktsTfByWqXpBIJKBpWodIGgVh+laUEYIItR/LjKIoLNKTbzes
      37A2BrEC0W4CXIsAjlpfkQRAgWKGYTC5qtduwDs2Go1G1wMXB98vAYQtnF6TwytWvBOKV9rC
      +vc8j8XBR42hF0SJFrLP6wHf91GpVK6rDdE4wePdyyAg28EGJfAoEXO90Gtt9eVBUVWVcZdy
      uRyaIxAE7fBjwzCQSqWQzWbRaDSYuUyW+CBDMGxRir8RgUYpT2GcN0zkEK8jawc/5l4PKsqU
      N4g+MuhCuF6lOwoP0bvOW3z6mct+F3+v+eF9UCKOUWMIg/5ciACLDCXrDykcfOeEQKvVYsFN
      hmGwaEEeQVJK+lEWwwZGFqgw2TGMy0c9NL4v/sEPYo0IA/4h03sYHhulCPfbZz8JKevts5d1
      j/TReDzOTJy8CKuqKpLJJIC2DjAIDORiU1UVuVyuI3xY9nIcB61Wi8nbADpiVuLxeN9ynbgl
      8+C6bk9/BL2LNm1ZHoAIJMPyitqNIIRBgLdmDOJFXw/IniXhsB7LTD8insiYZNcZhoFkMslE
      a/GZ+77fEYs0CAxEANQ5iTgUgiCDarXKTFvkvRweHpbGFokQtRXzihSZWmV6hTiZ/GeZaVYW
      pOb7PoaHh5nt+kYvPn4sMnOkbIe4XmvRevEkhiHDOQx//vow6Gcs+XwepVIJnucxkTqXy3UR
      wnoIoG8RiIAmg2Rj27a74iuA9sDK5TIMw0AikWDhsmRSJO8w0L0gw2RLGReW6Qu9rAye50HT
      tMj2CWKxGDMF89t1lGi2HksRPw5xMfWjN8n6DVNorxdkoQ+yPum/fnd7GX6O46BWq6HRaDBp
      gpxrfObhemFgAiBEKamZUtnCQlnJ/ttqtZhLmo8tJ4haiKLsHMZt+sUduOam7zV55FhpNBqI
      xWIwTbNDCRRxF/Hr18IlszSJRB5mCes1BzdSfwn7LayPfi07Yc+CQr4nJydRKpWwadOmjoSr
      9YZQE6yLAIBrA6aE80qlwiiSwlrpuiAIWAI6Ka4nTpyAaZo9FeFBTWmye3jQdb2rjAvtBrKq
      B/wDpOA6mfIfhmOvsVUqlYHCHPq1rIQRJz/+XveKv+Xz+RsmflE4vZg1Jmt/aGgIqVQKCwsL
      CIKAWRNvRHjIugmAgESi4eFhtvDr9TpTHPkHUa/X2XfDMDA+Po5cLod6vQ4AjBhkIobMPBYG
      UXIyzz2ovVarxeJdaEx8W/SbGBrCXxsmkkVxyTA5v9fYRODnShQ3iNDpGk3TUCgUkMvl+uqP
      bzdqF+LxCGuDf7YkAlPYTNiur+s6Y5SKorCguX5w7oUTcAMIgDqhsFjHcTo8cGKoBCWh67qO
      RqOB8fFxAGBULVNoRaKQgUz2lMV/iLH9vSwVovIsk3/pGjGWpVd7/Piu15QotiMzBPDhyzID
      xqAmX5E5DUIAhmEgn8+z3AvZs6edqtlsQlHa1sXV1VVomoZsNtvBbPikKrGMSxTcEAIgUJR2
      KPXY2BiazSbL0uEniuJ4VFXF7OwsPM+DaZpdnuYbobzF4/EuP4FMobxRCiL/MNZz3/X2K/st
      bHH1017YPYPoH/x1/DufBBOWJsr/FgQBpqenUavVYFkW5ufn4fs+tm7dikqlgnq9ztocHR1l
      ol4vuKEEQEDpZqurq2yREyFYlsUKJZFpjba3fi06MpAtApl+MehiECEsqI5vu185/UbJ073a
      6ne8YQxI7Ge9z6iXzhImXvG4ZDIZFp5iWRYWFhaQzWYxMzPD1tXZs2exadMmpNNpaYkeHm4K
      AQDA+Pg4DMPA3NwcgiBALpdDMplEIpFgJlSK0uSD1US4ngUrW5C8HC/LFAsDXgYOswANiqfY
      3o3YhcT2wyxpYbhsFCiKIjWfE/AF1sKIwzRNTE9PIwiuJWBpmoZdu3bh4sWLaDQaaDab2L59
      u9TUHgTBzSMAoM2BJycnWTDd6uoqs8Hv3LmzQyGOxWKhFej6ARnnlVk7+GtkCT1hbYuKsUgI
      vXQJEcQFeb07kwyiFj+/4MUCZ/y9PLiui3K5zKJjqaYPXU+yehAEPZ2dsngycQfiv+u6znS6
      XiIt0K7+R8GMCwsLiMfjGBsbg+M4WFpagud5uOWWW24eAZAyQtq+pmmYnJxksRzk1eOVMpml
      IQr4Byw+MArJ5q+jawnCkiRkfVAaqBgSzj+ofuTtKE4s49j9ytdRekAUHkCbEQRBwELLqU6P
      CJ7noVAosHtWV1eRSqWYo7DRaGBkZAT1eh3xeBwTExOReFM5RXEsIn7JZBLxeByu6/YMySdI
      p9Mdny9dugTLstBsNrFp0yZ4noezZ8/ePAJQFKWj3F0QBB2uauIY5Oggt7b4MD3Pa1O/EUPd
      9qGrCuJaIDVZ8u56qprA9yde73keqxtKZfpE4BdlLBbregAicfVasOKiFEWrQeVryr8ol8t9
      Mw7xOgoscxyHWehkJU2Atk2+WCwinU5jeHiYKZ/T09O4cuUK8/qLhQVkOIQVwuIhFouxQLdm
      sxlaaY4HcTfxfR/btm1j80sMecuWLTePAGhh81GjhBxBEAQolUpYWlrC9PQ0VlZWWNUJMqka
      hoGireLN0yWUmy40VcHuiQQOb06i1Wj7FcrlMrLZbIdtudFosHoz4uQQ0IMnES2RSHSNgzfb
      yUC26PshBP4Bhe1QvdqgXFty0IkEP6g4SWMl3UxcbLquI5PJsPCWZrOJkYkp+IoGVWvvupQS
      m8lkevaXSqVQrVYjr7VtG4VCgUkN/YxNJhbJCMf3/Zu7A1BNIQqFFv+PxWJYWVmBYRgoFAow
      DIOVYiH78MjkDF75TR416yoReQGOL9QR0xTszgUoFApM3CoUCtA0DWtra0gmk3Acp2sblk1i
      EAQsfU5GBESMskmXLVJRfu1nMcq2fr4tAKzUOIkrqqqi2Wyy2JgonHrhDFwrb0M6GS0a3mlI
      FfgURYEVy+CTmgIfQNYIsHN8AoHXVkb7IQBquxfI9LgwphH1Gw+0/gavODQAkCgiIsZvRRRr
      Q4ueiIU8s1fKzrXFz8G5tRb02DWOQ3IrhTpnMhnpgw57+JTjEHa97/s90yj5tsNs27LPYW3Q
      /RR3RYXJSJat1+ts3FHKvgg84YvXUTu2bSOVSiGTyTBmtLy8zNJjFVXFcgugXiuOgroXzijC
      xspX45PhF3af+Ar7P+z+TCaD4eHhm2sFAq4lrcsG4/s+ZmdnoWka9u3bB8uyMDMzwyg8mUxi
      rhYS0hAE8Lz24Qqjo6Osxic52RRFYV5mHvjJEXWNWq3WQThhXJkHWkRh1eN4MavZbHbV8hQV
      /zCLE1+WhuaOn8coy0gU7rJFQjjTwvQ8D6VSCYlEAvl8vr1wdAO6kuZbgwofCwsLGB4eZqLv
      +Ph46EIk4pbtelEV/UTg56wXk1FVlRG1qqo3nwAok0zGPRVFYecQ8HFA/IKYysaQMFQ0nU4O
      t3U4jmTcRHxyki1AGiAQPvioOJJNmzYxjzTVkxFNnTJilllu6HOj0WCRsBTT7jhOO549nkTB
      UaEpQE73UMyvsfRLx3EwPDyMSqUC0zSRSCRumpk0DMS5Iv+NZVmwbRtTORM+DNg+MBYDmqU1
      pFIp5HI5LC0tdZwHFgZkeZIlNonmZsoMC0v872VBVJR2rdtUKsXGflNFIACsAKqICIlHZHEI
      2zpNeHhkZxZJ42pNGgC3jMZxx6YkPM/t4pxhW5+Mq4rg+z5baPzDjxIZ6Hde5BEtOkHQ9lrq
      uo56vQ7DMOD5AT6rqrhYV3CupmCuqSGZSqFSqbBrKYyjl0VlUBAJuh8wTROlUqldUfkqI1Hs
      JnYmPezNBMh6NXiui0QiwSxSfI3VKFz6CVkgJpdIJJhBImy+w/ohka5jR6nVasEgJbbXA1TO
      T2ZC5JEOc1trmgZFM1BouDB1FVmzu5Q2PcywtEHaGfqRUVVVRa1W6+C6si2W3xHEcRBQjqpY
      bnB4chYnq9e4nqkCu1M28itLrLwfBYLpuo7R0dFInPsFXdeRz+e7okGjxD3+P2JavUBWFE0G
      FAnMr8GocG1eBOzVPuPynNhD99KuctNFIEKArxXKI8cD71mUwVT2mqUjbFuVJefILAZRlhk+
      CSaVSnXhHKWkifiTQ4a/R1VV6JoCQwngBO3rTS2AoSns/DJqhxbqoCbNKBhUlBL7Li1dwFvv
      n8Shhx6HtXACx86v4f6HH0WytYjXjl3Eww8/gHi41NMBqVSqQ5zpNc5+HGf0O0kZmUyGZSJa
      lsVCMNLp9M0XgQh6Ja/7vg+nUcAzf/8D/Pilt1CvruFn//AD/OSVX8P2aXABTr/zEj5daqIw
      9yn+9m/+AQulFs58+Br+y1/9LT67Uuwbn17bP3G7paWlrtNs+Db4tqJEC/4/3/fhORZ2ZQKM
      mQEm4wG2p3y4kt2p19Z+o0Dc6cLBxfJqE4fu3IcPj74LIzOFw7fO4J0PPsQv3zyKfVuSeOvY
      mb775at688pvlIWHzyiMEn35nJRms4l8Po9isciq1QVBsDEEoKpqz+NrFEWBosfx6Dd+H5vd
      OVxuJfH4N76DmWAel0vtCWrk5zB38SzOrFTxwfFLePJrD+PY0Q8wueMgfv+rd+Pkp59J2+a5
      L00UKXRRZcwpaader7OtugtnycKRObgolILeFUVBXHGxI+VjS8KD5rusvCGFhfRTYn090K95
      UQ46btm5CRcvLGDfvtuQCIp44cj72LRpDOmhrdi2+wvQK/2FKwDXYnwAoFwuY3l5GZZl4dKl
      SyiVSm1/w9WFbBgGLNXEshNDHSb0q84/ijZ2XRelUolZzGq1GjzPQz6fR7lc7vBu27aNSqWy
      MSIQdSgD/mHosRjef/UZnK2m8e2RGI699E+4VM9gT0ZD4Lv46OQ53HH7frzRsqCnxzGUHUJM
      B7TmIv7hhXdw4L7HQvsnziIr8tpLeaIzzaLw59virRYkaolnZYkQJdKFxebcKAjbrQg658fD
      bz44ju0HDmE8pWKlMIs//r3fwfPvnofZLCK/kICd6v/sMrIq8UfyVqtVaJoG27aZQt1oNKAO
      TeN0OYAXtI0h2zIaRq/uqPl8nuFKYhWFTohzqyjXivJq3//+9/9DPzEZ1wOKojC7sKzCMC0Y
      p7KGsppG1p7DFSuDbG4YmrOCwJyEFrg4e+IdvP/+UXyyFsc2s4CVYhF1X4Pu65ieHcH5iwXs
      2rkJAdePaCEgBYgmpZ+F5ft+V315vn3ZySZi25ri4qO3XkFen8ZEtr0bzp86ip88/wuomUmU
      L3yAZ15+DWp2EuXzH+CZl1+HlpvGeC7ZVZZQtsP0C+Q95i1zURxfZA4qfFz49CO8/d77KLhx
      qIWz+MXRs/jSI49i90wcL797AY8/fDcMtX+9hUQgvsQNL8OnUikEiopLlokW5zOru8BMUkW5
      VGAMjsLti8UiTNPsWYNqQ6xAQFseq9fr8H2flVIhHwEhb2oBTn7yCbT0FHZtGcanJz+Flp3G
      OFYwr27BoZ0TgFVG3k0hHZRx4vQ8br1tPyoLZ3FhuYrd+w4gG9c6zjHgw2fpt0ajwZRTsjyF
      WY8UpR1rNDw83CWj8tfwRMYTOcn8MR0onvsQp/T9ePALQwCAF3/yEzzw5Yfx+hsf45EHD0Fx
      i3jpV5/hiYcPI2it4ecfXMbXH7u3yyQrU/h48S4KRCtQr8Uv9nWjrUDUj2VZHU7Trp1U1XC8
      qKLG2TcMFbhrTIGh+ExE5YslU8h2FGyYCESDJG6WSCRgWRar3R4EATQzhdtuv4vd88U7DwMA
      XHcaE+QxjGUxEgOAEdxxx0hbvNh0C8Y2gZ1KToc2U79Ap4jiOA7LKurFpUgZ5tsSPxNEijhG
      AuOjOZziTPrT4wn80989jdm998CrL+G5l9/GttvugVe9gmdefQc7b78vErcwfHvh08trHDVO
      UlppofHX8MQ0iOJOfhd+VxJxUBBgNq3gs1LAwi+mkgp0eLBtpyNYkRyvYYaLDrG7byyvE3i7
      LSFA9fdpBxL9BPzWxcfpkNyoKO3ShSTOpNNpmKbJaveIydE0IXTyDe0+UYRA9/TyVvK4ilxV
      VVU4rRKOv3sMHzcW8YWRuwBFw/JaEbfs2onFlTlcMrPYvH0z5i6dRtodwZats7g0N49Dt27t
      6k+Gg/hfFDE2m03pmQdRffD/8YaEMLMkPw9hIht9l+2+sh12yvSRGFVRsoCUAYzGfDj2tZwP
      uq5arXZ4e6PGtmEiEEV58pNB8mgqlWLZYEFwrXyKoigYGhqCoiisfg6VX+cLpfITQIMUM4fE
      RUnWg0Qi0bNGjnhUEr/YxbIj4oMj0FUPF8/PwVVUaG4NdXMGt07HcXlhFZObtsJv5LFcqGFm
      81Z4tTUsFxuY2bwVCaPbK90Pdw2Te9dTFiUMwio1A/2LVlRxnPJ3ATArWRiIIqcIxGzDjk3l
      YcN2ADHtjldyarVax/lRQ0NDbDKWl5dhmiay2Szj9LLoQdHB1UtRNE0TtVqtp8xM23MQBKwi
      AQXZhXFcqSdaT2DHrl1dv9+yM9v+EJ9EdmTyKnJTyF51/IblsvbCOQrWU+hWBArNvl5oNBpd
      iqqiKKgVVxEkhpGN61hbmoOlZzE73tad7EYZlxdWMbVlG2J+A5fnlzE+uxWqVcTiWhXTm7ci
      roVHggKc2LZRO0Cj0UC5XGaTT9ybBk7BcKKS2csWLqNqXoGSER19p2p1vRaE67qwLAvpdJop
      dyRmEfB4ijK2TAzjFXPxP/5efi4I+gkBCJszTdOQz+cxNDQU2UYvUJR2IGNYYnsvhZx/RpRn
      zMyVXh3HjjyP+vYncHi0hpfe+g2UVgP3ffsPMZ0I8Mvnn4GSHkLZVrFr1MBKrYWCFcP+qRiu
      rJWQ93N46kt3dqTEysLFN8wRRiKJ7IHyi16mfPGyPG+tEc2b/H39yMn1ep3ZnmXAizR0zCcA
      dmA4/Sc+6H6U6rB5kI1Z9hoEZPcN2gbdwzuSyGnHc27XdaWpqr1gaGgI5XKZtWXEh3D34Ttg
      6Cry9QoO3vEwHrxvJxavVAGoGM2ZOHPuArLDk9hz+2HMDmexbctmzEwO4eyFOcxOTzEcZKIp
      /33DQiGATgWK5/6iwhp2L/+Zf8kUbPGz+BuFHUcRgOhqB8B0kKjc4H4gjONHEXW/BMAT0noJ
      R4S1tTVUq1VYloVarYZqtcpOC6rX61hYWEC1WmWe2F4giiJhO31cUZGvlFBaziORTQCBh4Wi
      hz/+k+9i5fIZnPv4KJzh7bh9zyb4iVn8yXeexML58xD3SNl8b0g+AIEoL/MTsN4HNChno/8p
      11jkxF2mN0Fcoe/JZBLFYjFU8RXHGgRtEzAVBaM2+fsp9EGGs0zul42713Vh1/QD2WwWa2tr
      LLDRsizE43EkEgmWZE5jKBaLmJ6e7tlmmMnUqi3hJz8+ghXfxMQ3v43G3BEsm1vxqH8Br31s
      4NYd4/inv/8x9t/zEBY+fRun3/sYp3d9EdvVEo6eXcLB+x+DCnQRAd8n+74ROkAQtHN36dQY
      RVGYDkClU2QPpR85Muo70FkIi75TAnxYlCffd5gMX6vVWGx8LxmdCCCTyfSFc5guIPufJ1QZ
      iPeqqsqsLoNAtVpFs9lkIQq6rmN0vJ1v7bsOVlZWkEql2JGqsmy8KPzK5TLL7As71b1UXEM8
      OYS42Z8jjkQycrwODQ2xY1Qp4WnDdgCg02PZ7/WD/N9LngfQcSAzn8YYtkOF/ZZMJtFqteD7
      PtLpdCiuVEIkCIIOU2/Y+GQ6hWxn4ok2zBoTtrMOKq4B7SR3iql3XRdFR8HZZrudTQkTs7PX
      ysb3KorVC5ewrL1UOgdAXuGBgKpZkGOMzL5EWJZlwfM8lmm3YUrwIAprrzaiZPsoUJS244yv
      /BAm/vTCjbKTaAHyyjWZTulzuVwOFaf6wVm2w/BJHeuB9SrTjUYDbgBcbihoeu3XpQag6EbP
      HXvQvtbzovsrlQr77roustks26Vs22aplb8VHYD/LnsQFP0oC9Lj7xO1fFFkETmjbduIx+Oh
      FRToAWcyGSavx1NpAAo8u9VxPfVLRakotTMej7NiUaZpsuTrlZUV9pkcf2KedJeNWtAxZAs+
      asGFyfuDlA8HgPn5eRZTk8vloCk6/IBzBgaA5weYn5vD5OQkHMdhp+lsNARBwAw6MksAACAA
      SURBVESccrkM0zQxNjbGzhgg5keMcEMIQOaVI2RFTus4DkqlEgBgeHi4HUgWiyEej8MKVMQU
      wHMsFjabyWSYbNprwlVVRb1ex9DQUBfHIKCS7oqiwByZxKmaBi8AJswk4s08vKvl+UzTxNDQ
      EPOGJhIJtiOIhOt5HqunCYDJ0LL54CFscQ7CZcPKTZIS3m/OwcTEBK5cudJOJnEcjMVHsXSV
      J4ybQKtWYQRaLpfhui62bdvWN543CmgsVBeUniWllQZBwMJlNE3bGBGol4mTh2aziVwuh0Qi
      gVqthkKhAN0wcK6u4cOCgg8KChwtjlKphHg8joWFBZYIAUSHCsdiMWQymY6TakQgMWlsfAIL
      LQ1NT4HtK5hvAmY6x/DjzxjjwyR6LdogaMuwvQryht0vwnosOjwu/TwbVVWxurqKWCyGZrOJ
      Wq2GMaWBAzkfB3I+cm6ZMQXKYe4nYvRmgDhPpFDLKpB7nrexSjBBlHydSqWwtrYGRVGQzWbb
      QVuqgfxVacENgJUWkIvHUalUEI/Hu8oCyoAWKyWb87/xQFUDXM9Dp42gzS3HxsZQLpdZCUex
      D36MBOsNGRDjjNYL4jgHJZrJq6VnyOQJUImUq0Qfi2FmZoZZ9Eh8vB4d5XqB5o0qfZDHmjd/
      AxsYC8RDFAFomsbKGZJrXFMCmKqCxtUQoJQOZM1shzJLZi0gfMEFQfsUezHYirdOUdk/TQFm
      4sDFRoAgAMZMIAYPjqpieHg4cny884wX82SKcK8FMoihoBdO6zUeXEseuip+BhpSqQTsVgNe
      oCGZiMNq1GG5PpLpDOLx6zu69HqBxsrrelT0V9yZNoQAwuR//p0HsfqZ59jYkzOxaimIa8Co
      7sJxvIG4C/XDH9NKIPvseR6ymoXbsgZ8KNADt2dlYhnHi+Ligyiig/QpA9FYEGaSjnSU+XW8
      /vKrWC3ksfehB3H6raNQNQX3fONJvPGjf0RidBwP/M5TGEuuezg3FYIgwKWP38Evj57G/vse
      w6Hdm24+AQRBd1l0epcFdfHcmV8gOjxsTqhXKTuQ5nkC8mORRHzCrCwAmHlMuAtAZ14wOVlE
      0YKPeu1V3u9GcclBiYD/HMYIpKCmccvmUaw2fYymDDQaTWQyTRw7Podis4pMej9Gswbg9i5h
      Lm3+BkSX8tAtogY4c2EZ3/rut/HWm0eBjSAAWVHZMC5DIsj1ABWQ7YWTuAPxHLFVK2Gt3MLU
      zBS8RhkrxTqmZiawOrcAOwiQHZtCNt45daJzShRdwkrE8/cQQVG2lWhNIuIi/PkknV7inwz4
      3YBvIxQ8BzP778FD2tu4VE3hX/zbP8Pqx0dwLrsJjx36b1G58j7eeP8KHj00NdAB1r7vsxOE
      eGKOIuyw68R76HsQBEgmE5gYjePpf/wxNu2+E8AGiECUBjkY+Dj38Yc4sdDAU088BEUBnMoS
      nv/F+zj4wMMYQwHPvPAa4rO34mt378CzzzwLDO/Gt568n50M02sX8DxPmqAPv4pXXziCeErD
      hfwemMU5VOplnF3bj3RpEctXzgK7HsdXDm5it8i8t70KOMnuKRaLzGlTq9XYUaCxWAx6zETF
      N+D6wLDho1EqsDbK5TKrJmfbdttWH1JlopcIFAlWBS889xLqtoqHn7gdrz33j1jBFH73qzp+
      9fJzWKwp+PK3HgQQnSwjA8MwrjtEOwyIGWkqsLpWxuTUJPJry1hZWri5sUDkkWs0Gh2KoOiw
      IlAU5Wp6ZIBGvYEPj32I++5/EKoC+E4L5z87C3VoGsriMSxnDkA/+xZK47PYPLkb/vzbMPd9
      FbNxO/LYI/Ki8ifS8IvT0IG3XvwZzqy0cM+jX8H+LSM48d7biG+7Dbumc3jnjddx690PIqF2
      xjDxnFc2Nj4FU6YTKEq7/DgAVumazLVj4+NY8ZNYsdr3xNUAX0hYKKytsoMq6HAQiscJ20k1
      TetIQx0E+k2CIT8H7Va9jqEi4h8bG7shyTqy9oGrz8izsVqoYGgkh9+8f/zm7gAUlxGGkAxO
      f3AEZ6pZfONLh6Bya0Q14kiaOloANu+7G+d/8XPMnbuEsaFZxE0TSMZQtz34segJjOpbURQo
      dhEFfRP++OuTOHJqDu7Sp5jcfTdmR5NoFOZgJyeRjetwJHoNtR9mbSHHUxhesVgMuq6jUqkw
      k6Pv+zDMOCqVa320fAWe1va0UnooxRmVSiVMTk6GjtH3fZRKJbZL9hIjxM/9Aq9j5HI56Uk9
      /G4YdgLPjQbViGNiwoSqqrj7/ntuLgFQUacwr6sMdt/5KHYHHo7+8nm88vp7qKlD2DMVRzoW
      4OmfPQsnNo7vfPdxlMt1eGNfwL3bRvDc8z+Eb4zguwd0BFZ//gCCLkuMOYxtqSp+9Mpl3P/Y
      Qzj+/LP44ORZ7Ln3y9iVrmPPrbugcG2FLf71LBoqvUKnqwRBgGw2C/geErqKlt1uU1cCmEoA
      nUvSURQF1WoViUQi8uwtRWnnWQ8aDbpeoAK/oq4FgHn4SSS9Gdyf+qSdiA7aox3wpopAruui
      WCz2LQsyESgI4Dg2XM+HGrRw/OQ87rzj1qsVABTEzBhc24ZmxKCrChzHBlQdhq71PEWQJjvM
      U0ku8l5g23Zo6iPQHYJg23ZXGmW/oCgKVCOGZUuDGwDjZgDDi9atopLi1ysCXQ8EQcCOciLm
      QCfd0BlnFPpys/qn3axWq7FTd27qDkBbW1TlAEKOgHkaNR0xDQBiuPP2W4EA1zhbEEA3DAAB
      PD+Aqukd90ZBL8cShTiIFhIRohY//R/mGe4XOvr3XMxeFes9z4OPzup0Yvs3wsdwI4HWAi9S
      xWIxxGIxVCoVLC8v3zQlmMcBaHv7Pc/D6urqzSWAsEAr2cKihyg7SUYULXo91ChnziCeV7Ev
      0cwZpszzbck+9wt0kLcI4g5FMe6yvsWx3CjP8npApvgD7WwzSqShGv5RUKlU2qIhAFW9mlgV
      +AgiolzF76qqtqNz1z2adYC4gKKuC3Pa9MPRBmm7Vzv8oRYkp/ar0wxCtHLwcenUcbz61vsA
      gNNHj+CvfvAjLJVb+PT9X+C//M2PsFrtfXCfOJeyxXGjnVBheIQxxHg83vcOTkGSTqDgUlPD
      J1UVq44ORVVRKpWwsrLSlzM0mUzefD8A2aeB7vREoJMz8d95RAF0tEHixXrkRbEcySAgWkYU
      RYkssstft15RJD26CWb+UwAVnL2i4/ceP4B3z56FteThu1/ei199soCHD872hXcYbMSO0I9I
      1m+SD12z4hhYvWoabrgBklmdWR6j9DwebroOQHUa+YKlPPeMEof4/2ixKYrCkknoDCqZhSHM
      jEcv3lkWdp/4X6VSYVGgonjDXyfbHVqtFqampgZcbCpGx8egfAbAbyGeHkUql4V7/jISyREk
      R0eA3+QHaE8+LhHXQaEf8aofJkDFyqLOGFaUdpRwNptFkbN3BFBgXw2RocQjHsTnS+83fQdQ
      VRW5XE56wAR/jQiySSXnDh1ovdEx55T/y2/VYQ+WiJ2u4aNV+wcHH7/zDj44+gEy45th5Y/j
      mec0TB98EKu/+QWe+fEpTN/5lYFaFMWh6+X+mqahHuiouwrSeoCk6kpFmX44O52F3AuIQMbj
      QMUJ4ENBQguQ1QOoEkU6Uq/biKoQtm0jn89LRRZe/gwrZstfS4Mh09lGQrVaxdDQUMcDpiNM
      +QOfaQw8AVAZkUEWXCymo7iygrrtIpkbRc70sVa2MDU5DrdZwVrVxtTEGFwn3PstzuONNIMq
      ioIGYjhTbZ8WrwLYlQ2QDGzpOHuJnYqioNFoIJlM9jVPqqrCggbLU5DSfKiBPBCS/01cUxt2
      SB6fiMIjE8aFomTGG8G51gMyXMiZQ6ZeRVFYWML1miKDQMHo1Az48yGn4xkAAYxEBtMJIAiu
      KeUyhhEmXt4IUFUVJUth9Xd8AGVbQdpUpQQp1kISgbcC8rke1JfsnoQSIKFeHZMiJzARFzJo
      OI7z20mIIbieBxHGTWS+hRsN/MOgyc1kMmi1WizveJBoyDBwHKevHIR+xAsCXimXccZ+543u
      T+kBgGt9t7+DHX4uw5fJ31xBZILh4WEUi8UuAuANDoOCuDNXq1WYptmObVpXiwNCVEAUr5jK
      LETitfw9IkTtKDcK+AWkKO384WazCUVRWLKNGPB2o23vsvkatA9x8cteUbC6ugrXdTGi+9iW
      9DEaA3ak25GqjuNgcXGRFUMgMZeqx9Fi/uSTT6TKKs1nJ/j45Ogb+Mt/+Cn7pVVfwbN/8Rd4
      9+IaSlfO4L/+P/8Rf/GXf4O1FrD62a/wv/xfP2zf6ftdjksqr/9bK4vSC9ZjutsI0YjfwknR
      pUPeDMNgOai1Wq2D24kxMdcLItcPE4Fk+MvKwsu+U9lymShHIl8Q+EB5DVtHRtBoNFBpBMjl
      chgaGsLa2hps28bMzAxWV1fRbDaxdetWNBoNLC8vs9o9Iu6Ulto5Vyr2HnoIefvNa9elJvDY
      4/fitKbA9QOMzcxCQwDPKuH4RRd37JRXpyOfw4YSQBhELdpeekC/7dxIEAkAACu9R0ouhQ3z
      OxbFAUURtqIorNRLPw42Hh/xf9GEzP8+NjbWZbrlr6FdrNVqMVMzgI5q0Dt27GD9UR1QviwN
      mSqBtvm4UChgamoKFy9eRLFYxB133IETJ05Ix0cVuAfx1djNOnKTm6GXLuDIC8/gwkIBSwur
      uO3OezCTNTrmzXEchutvJSOMB0JKzAOW2dlFE574eaMJgO+zUqmwia3VaqEKf1TeAFWbi3rw
      snt44BXNsAO+e42PCKNbkXfxzqsv49RyA1956puYysbRLMzh6WeP4Ja7HsE2s4iX3/gAW/bf
      i5HWBbx3agFWYhx/9tSjaDab8H0fIyMjKBaLkfI8EWEnuHj35Wfx+tETyDtJbE772LllHD9+
      +nms6mk8+diXcOHErxDE0vja7/4pxuI+Xnv7KHZMZNg5wwQdJwvdbDOoZVkol8uRylyYKZQH
      ceHwVEy/3Wyo1WqMewLosvaIp+DwxBzmaCOgOWi1Wn1XVJPtkHxfJHOL18tAZp2h41TpvlgM
      WFtpQSl+gvPmbty9YxRv/uJF7D38EH7z1ls4+MADSKoWXnj1HTz11JNQmot47dgqHr3/AC5e
      vIhWq4XJyUnU63V2KtD27du7CM11XaytrbHjsUisZPPiNXD6/Bp27dyCfug7n88zkY7MrEQE
      N30HILd0GMg4e5hZ9LfF9UU8wkBW7iTMaxymaK4nvKOXNadf8VDEubt+Ugxe/Qw+q2Zxz66R
      9k0xE5lkEukUANXGc//wLNJfOABVCfDJic+wZ/9dCIIAs7PXwjXS6TRL2qEdixcXqbQhrwtQ
      Wfb2dQZ2bJuG22fyfTqdhm3bKBQKGB0d7ejvphMAHYEaBrLFIHtgoqi0Xtv69QCJBbwZNAxX
      Oq2c3/lELitbrP2KPzILWT9+gDCQESyNjbXh5fHTZ36N3Qd3Y7lQheo1MG4CL778IhwvidyF
      cxjdvhlzi5dh1bdhzUrg1lwCCPwOy1gYrvzOGY/H0Ww2O8JdeKIcFChpiNbjhhFALBZDMpkM
      DYWQcfaoXYB/GYYBwzBYzvFGAD0EUnLDvNtA52KWiRhhlqxB4XqZQdh8dxGoksGTT/0OnCBA
      3F/DyQsWHr77QaTnriA3MQPDrcFIFPDFO6dhxg3cffg2aEq7eK6Ip0hkYv+JRALVapVZa6Jw
      7XeHk50HtyE7AMVu8MefRtmt+xlMEAQs0Vy0ZvRq/3qhFxcKgnYFOp77R1m0eOCdNuK4xDES
      Lv1wevEe8T9ZxWxagHSvlkphy1Xrj+M4uPugB0U1ML1pE6rVKqDp2LR5M2zbRq3RPou4VCrB
      NE1YloW1tTUmghQKhY7TQGUEEQQBFhcXMT09PdBuxo+LF63EOQU2MBSC6rJT6XOCMM7Ta/FS
      G+IphaRM8tz5RhNCP1uxzBMsMzuKwB8+LT5A+i3MGtYv9HO/oijIZDJMdCAioQPKHcfBiRMn
      EIvFsG/fPpw8eRJ79uxhi/7cuXPYu3cvLl68iL179+L06dPYuXMnLl++DMdxMDExwSxecqtP
      G6j6d7FY7NAj+DkR50oGQRB0BU8GwQadEqko7fLUpMWLYg//cOmcqX5twHRsKQ9kScrn86yM
      Os8BdMOAHjOhcUWlyuVyz12DX4yid5FCvukIHiNmwoi184vr9XqXJ1K0dvH48b/1WvC9CCAK
      Z3EBiW2JaZ38ffF4HHfddRdyuRxWV1cRj8eRSqUwPz8POkaW4qSoqnS9XsfIyAj27dsH27Zx
      9uzZjr74gz94vDRN69IlZXMXNnYCOruBH9OGOcKICMKQE68N0wXEgKooXYF0A6oGAAAjkzM4
      WwNaHjAWVzFtariyMM9CrMvlMpLJpDRaMorL0Kkjpmmi6OlYbCpQFWBrUoPvl1AoFGCaZkdV
      admDi6ogxxMJL5rQd9G2TkkhvAIZxfEJJwJZDVX6XiqVMD8/DwCYmZmB67o4e/ZsRywPmVCX
      l5exY8cOFuu/srICy7KYo0wEkRHQmWMy5bnXGMT/SWTeMEcYD6J8K+N2PEQNKGrxE+i6Dk3T
      mDw+OTmJy3WwUuuNGpA12ufdptNpdtCGZVlSAogiWhJdUtkhfFpS4F299EJdwSYzjmQyiUql
      0jEuWZsywhcJxbZtlEolZDIZVmyrXC5jYmICjuMgkUhAURRWAoQeej6fRy6Xg+u67JpQi08P
      yOVyyGazDLfp6WkmyoyOjjLRZs+ePax9cfeJYij8tXSOsCxpntch+hGd+QrRvmttLAGIMlgU
      N6JzfGWgaVpotCU/AcPDw0yGNc12MSSbMx0HAGwf7PC0ZDKJWq3WV2K2COl0ul0CxgvY4gcA
      1wcS6RQC12G1eMIIW3YusQwqlQomJiagKAquXLnC8G82m0AsgRNlFbYH7MiagFtFoVBgpsV8
      Ps+IUcxQEwlTJLwowuVNmPx7PyKlCLKFTEceDQ0NIZFIwHEcVgpSxFnWnqy/Sn5lY5Pio0rr
      hU24bCHIcotlwJ9rRfXhpxJgFefSOpDVAqTTaYyOjrLaNIN4mPnJHRoaQlwLMBK7ds94PICu
      oGPblbUhWkN4EH9Lp9NYXV1Fo9HoUCKTySQKnomCBdRc4FzFRzqdYX2QmMSflNlrnPxziVpc
      NxpE/GjH8jyPBRWSlS0KP/5/Are6hOdffBnK0OaNPyaVt3KIwG/B/OIP29pc1x0oLdL3fWQ1
      B7cP67B9BQnNh++EF+2SKaa9wLFt3JKMYTahQVWAWOB27VZRSi1vYZLtBqSA0s7Gn1SpqioM
      bt0YanvXnZmZYfeSR1UWiyMWDJDhJuoIUaKHqmlQVBUIAviSBKF+FyxdzyvCg+RbiO0ZyRHc
      e89hmH5jYwlAVVVks1lmcZEhKl4vusoBsNLhjuNEphqGlQjUlQBxDe1zBiRplWGH+skgFotJ
      +05rxJU6T7vkbfHXXPudYyag/8TIUlGHonfXdTEVVxGgLQLNJAHXtdnCp+sGYRqy3VYUd2T4
      q6qGVUfDmgWYGrApoUF1rY771wuKorA4JcuyWBg6jYuYAeWhdPWnGhgZjqMwf2bjdwBarOVy
      eaD7ZDZxwzDgui6z4IgD7RUNGSaO8Yu/l8+i31MWReiHAYi/dXCxsHzowMfm5DXLUBBStiUq
      Pkuc5yjjRJiO0Ao0zDUUBAAaHqAA2J7ozgDrB2QEeOHCBezcuRPz8/NMl3FdFyOjY1iyVJQs
      IBNTMZvQYLfaBxJSXBoxpJFNuzY+H4C2bU3TUCwW2YAGBeKCFKMuI4JGeQHPPP0ySg0b3/re
      f4fpJHDszefx4ek5DG+5E/snbPzy43n8mz/6Ft544Wc4M7+Iemo7/vxPnmS4Ul9hODarS3ju
      6ZdQrNfx1T/777ElA3z08g/x6oU67rjzEXzpjk144T/9r7AP/zsML7yF0/OLqCe24s//9GvS
      NmU7HsUf8eIYnX4YBb3iiqKceb0U8ahrFUWBE7SNDAS2D0AizvUL4rV08DVZwRqNBtLpNOab
      KuauRt0UbcD2FEwpbTN4rVaDbdtIpVKYu3qmsfb973//P0RVE74ZQM4N8ijSbzLZmH/oMpMh
      316z2ewoQJtM5xA0KrCUBL6wdzcSGpDLprCyXMDY7HbcfvtB2I0iNm3egR179mEy7mLL/vsw
      mtKlHJI/aJvwSqSGceu+nfAaFsa27UBaB06+/z6Mic04dPAAShdPwMxkUU7swBMPHcJUwsXm
      ffdhNN3dB3HtXmcIK4rCCKC6dBo//MdnUEEGW6dHoKCOv/u//xPeOXUJW7dM4sizP8Mb73yE
      ia3TeO3pH+FXH36Kzbv3wlTDiZqeRb+VN2TEEtMU1Nz2EbMqAswmgLjihV7fT7t0Ig7pMYqi
      IJ1OM30ml8vhQkODy9G17QMzSQX5tTUYhoFYLIZ0Os2y+H5rGWG8Y0xVVVZZQdO0rghKXuaN
      2pbJkcXs036ArbfeBsf6FZbKDobHDGjxHO6663Yc/XQBwE52f+C38Omih8cPpOD3sU1T/55V
      wzvvH8feux/AyNXitYeeeAqNZhWvv/oSVs9/CEP1cClj4Mn9j+CTKw4e3x/ehyjX8+OVKZvv
      vvcJHvv6UxjNXHUq1VeR2H4vnrxvD7IpA49+/Xdx5eRRFEvLUEd34d50Ect1HyE+KNYn7RD9
      GAHo+o7gP9/DrjTQ8FUYSvuETd8fbKeXjZf6Ip8AfSczd1IDmtzUxjXAMHRmNgbahERr5Lea
      Ekk1dUgusywrUkZk1glVxVK+hkrDQiZpYno0g8BvKzt0skoikUB95SJ+9sqbgJbCI7uu4Ohp
      Bd7lozh5uYitB+7GsSPP4Y33PsZ8zcBX9gxh84GDUAGIgoGM2Oi3yuoFHHvvOE6fPY+HH3oQ
      JVdHLP8pPjg1j1sOfgl/8J1vA6sn8avKZjQXLmHz/s4+RM4u2tH5/ng81i5+hF98tAzDquE3
      b7+JvKXjT3//69D1YSTcj/DMT0/h3t/5GrwrH6OZ3Yq9EzrOHTuDU+UW9t7qA+iPA4uWMHGX
      FhepKE3kmLFJu/pChwmzHxzoHhlu/DWu62J7pr0D1FwgqQO3ZACPS6/sGs9GFMaKgiAImFuf
      HDZAZ1Abz5Hqto///Yev4diZBTRaDpJxA7ftnMH/+MdfQjahs8E1Gg2MjIywgRZX5uDHJzCa
      7Z1tFXbQXrlc7qphT/Zp6sOLj2Ms2/ugP+qDb4sywkjM4kHMNqN+L330Jo58eB56bhpPHNoG
      W4nj7TdfQ74W4CuP3Yb/+Jcv4ZbtE7j3gXvw1pFfQ0MTh775b3HrWHedJh4URenIc6bfeu0G
      hurhjVdegDu2Dw/sHcPLL7yMxJaDeOyefTj1zqs4U0niycfuAzynZ0ChuGibzWZHrVl+MfMW
      M1XT4UJtJ8g7Vsc1ohn3t04AQHtLokAoqhRAJwaOjY3BcRzE43GUqg38T//5VXx6caWrjV2b
      x/F//vlTgGcxTzE53gYtoSgLGguCdnjw8PBwh+wua5sX2+g7cG0RUyolmej4/y3LYoqd2Ca/
      +PhQBmrj+HvvYd/hw9C5Bcvb9vmFLGbqyfQvSkgZBBbPfogldwax5fdg7H0cW3IGPnrrBYxM
      zeKz6hieuGszjFgcnjsYAQBgYR1EAP2mjopAtWUVRdlYT3AYKEq7VAclz9MCnJiYgOd5WFlZ
      QaFQwNEzSzglWfwA8NncKl47fg7NZhO1Wg2O42B1dRWXL19Gq9WC67p9v8IeDL/g6EXFq8QX
      BeDRMVFkyTEMg5VZp12OFyX4HZAHfhfkj/uhtnzfx22HDkETyrmL8jzfRph1SybuRAHf7sjY
      FD47+hKOLwKbJ1L44OdP43I9C6tQQf7yO/i7n7yCmjWYKZQXAUVxcPHcCbz6y/fgcL+vXj6F
      +XwDK5dO4cUXX8ZS2YJvV/HWkVdx9kqxA+/PBQEQl6bYfuJWpVIJtVqNmTc/PreIMDUqAHDi
      3NK1s5+ubuGxWIwtwvUCLVT6LOOWYd8ZfkHAimiFXSeTr/n++MVqWRZarRYsy4Jt2+ydf/HX
      0P9EoLxhQUZs/ZiARcICgNXFOWy/43EcmPZx4rNF7Ln3K5jNNqEkUti8517sHjVRqLek7fUC
      Ec9WaQHvnLyC/bu3st/cVhm/fuVZfHKlDF9L4IsHduHtN17Du68dQW7LHoymO3eNzwUBkBmT
      54CTk5NIJBIYGRnB0NAQxsfHoWvR6Gpa25o0NDSEVCqFmZkZjI2NsarSg5xbGwbkZaQYdf4z
      fSeuToSdTCaZlYIWF18pja+YJt4v64//jd9BxGA6/lqRoMT/+GuA3gtf1AvotW3vISjF02iN
      fBG3z5r46P1fQx+9FQfueQCz3gLcka3YMpoO5eoiUYYxgiAIUCsvYGnuCn7+2puoNNri3JmP
      jmPPobsR0xSk4wGOvPRzjG/ZjuXFIo796gg+On+lYyy/9cJYwDUTJtDWB+icLpLxyBZ9+65Z
      /PTNE5A9F0UB7tg128HZeBs2eY1brZbUa9wPuK6Ler0u9U2EmWjJSccvmijTYqFQwMjISFfb
      4n394tDPPUC7XibF5xMTono6vOjHGybEdhVFgTk0hPse+SobzxNf/yb7vPfwl9j1lVqtY9xh
      eBIoSrto2OjotVLB8dQYdh+8EweGF/HxxRoe2ZvEyRMfYXVtGfPpNez/7kP4wz/7I/z42Z9j
      ZmoKDz7wEN545Qi8/dtYG58LAgCupU36vo9arYZWq9UxCb7v474DW/HgF3fgjePnu+6/d/82
      PHDb1sikDzq8meJIBgXi5r3CCETuRXEpMs7Jj09RFIyMjHRZXkRipaT8KODxCMsb5pVvAF1z
      wlu4ZGKYDMQUVZFgqJ1UKhW5y4h48noSQXpsG2YuvI7XLibw+G2LOPIB8J3v/Q9wKktYctIo
      XvoQz310EQ888U1sTrXw/HM/xf4HvwYNAGkhnwsrEA9B0I4T4qt58Q+q8wrpngAAIABJREFU
      5Xj4y+ffx2sfnkO+0sBINomHD+7A9752Fwz1mimMt4CI4HkebNvuuw49QaVSwdDQUKT1ot8k
      9TAg0yPQaWcfBE+RQ1NbYUSjqirzndxokCW9i3jy38VreGi1WqwAMXCthigAtJpVQEshHust
      1fNSxueOACzLQrFY7JL3OuRUVUXTcmA7PgxdRTJuwL9qVgT641aU4D0IEVQqlS4zKA8yTjcI
      kOLOm/dkOwD1xf/P9yvuNL0C9lRVxZUrVzA0NCQVcxRFYVYs6pv6oXajdlRxPnhRUPyNrpeN
      l84UJmcb4Qp07ophIiH/mRjV50YEIuC5VNSkGqL9PcTW32q1QsN2qY5nOp3ueyu+nv97QdRC
      73W9TEToFxSlfe7WenYAXdextrYW+azCuL/4OUo3osWezWY7RDtqd9Cdku753BEAHXLWbDZx
      +sM38O6JizCHZ/DNJx7CsTdeQmtoF7505x4oiosPX38V5yoGvvrlR7B86m38Zt7FV7/8IBor
      57HQSuO2W6Yj+1JVlcUP8cnqvMxZq9Xgui7S6XRfmWjrJQJqt9/KZzLOz7czCD68X2NQGESG
      5/sapB36T9d1VguK/0/G5XuJU3Tt58IMyoOqqshkMkin09h527347u99HaNJE3PHjsCZPYzD
      t25pX+i7mN51GIc3x3Dss09w/FQN9+9Q8PbJRaxW88gvFPruL5vNsoR1Ap4bDQ8PM5/CehbJ
      IBBGZKIpUMRVBlHydlQbUX316odPWSTHJl8dXFGUrqK9/YJhGMyHwS90evGGBvE3Hvg8kc8d
      AQDtSYrFYtB0A6XFixjfuhvzi2XMffAyfvrL9xAgANQ4Wosn8coHl7F5agvi/iX89PVTmJ0e
      wp49u6EPyIkzmQwr3yhyRKqiYBjGTScAIJprD9K/TPaOIi6xj3774q9bWlpiVeAqlQparRbW
      1tbaepOioOAaON/QseYaUHWDVQ4vl8sol8uoVquwbRvFYlFarY4fh2zB8+ORzaNYrvJzSQDA
      1UUQ+Dh9MY89O8axdXocex74ClKtElquC7dRgTK9B1+7dzs+PX0M9dit+Naj+3D63DIa9Tqa
      zQYsuzOzqxdHS6VSqHH26bBS7TcTwvoLW7j8e78cXlw0Yf+tB1RVxcjICCuLT7uBrutYtnSc
      qQDLTeBsBVhoth2Xi4uL0HUdzWYTjUaDEQR5zUXxMErejzIA8ITxud4BroGFnXvuhKkq2Hbo
      flhn38fm/XfiwtFf4kLFx/LpD/HeJRsPHHoAd9yi4u2zLh45OIO3f/kWCoWz+OTiGmup34ea
      Tqc7doL1WHSuZxGJsnKYpYSulT1gGS78PbLFL8YHDapQEvAWpeHh4Y6gxKVm533LTUC/mqDC
      V5Ejk6wYfkK4ix540crVD96MSD5vZlAC8rrKoF6vI5lK9RHRHm4F6gVkHSKz5CBEIIY4DwKk
      5MnyAfoFmQIYtUA0TUO1Wg2thhcFuq6zglvUNi1SAt/3EYvFcKKsosxFo6R14LYhH67rdIk3
      AFhYOG92LpVKGB0d7fgtSrQT54OYBs3v584KRKBpGnPNB0GAWq3GjtlRFAUt7iRBfoGIocxR
      ELUoaCdIpVKwLGvgU1vE7/0s4CjnXdj1Yh+88i6+R+Eju3ZQPOizaI5VlHZ65fZ0DKfLgOUB
      MQ3YngHcq2HRYhupVKojmlXEf2VlBcPDw4zQSqUShoeHr+YDaAigQgm8Lp8Nrz+oqvr5JQBx
      QtLpNDzPYx5imekL6F9xky0A8d5UKoWlpSVMTU2FtkO48HU4r9cbDFyzBlHtI1ntT16ccV23
      I61UHKfjOCyPOGzsvKgxCCHyC4pvU+wnqXo4OKKh6QNxFVADD67bWVmD2uKftYgrWYIqlQp8
      32fFvkqlEobGp3C+pqDpAaOmgtmEhksXLzAnX61WY+cEDA0Nfd51gGsQxs34BSieNUXbnQyi
      FEEeaOLCgCZ1cXERiqKwEGRFUaDHk3D1BGJXt/JWq8VqIoWdmybWBbp48SIcx0G1WkW9Xmd1
      Tm3bZvkGAKDpBiw1BsVoV6Qul8tsETmO06FcOo6DUqnUNVd8vyLw1ZtlcyCCpmmIxWIdL13X
      YWgKsoaCmNbOCaejkEzThGmazKHWarWkyrmqqmg0GrBtm1Xdzmaz7PDr+QZQsIGmB8w3FFRc
      lR3QUq1WWf0g27bb3u3QJ/s5hF5avwjXs60TJBIJNBqN0DbogdCiq1Qq7fxmxcC7Kz7eW/Vx
      PB8Aqsqy3cgyks/ne46Ryo8TEZRKJRSLRRSLRSwtLbVrZJoJnLeT+KSs4tO6iQaunZwzPz/P
      iuTm83lkMhmsra2xsu3ifPWaqzDTopzRBHjvxR/ixGI7QM6u5/Gzv/8BfvTMa2jVVvGD//qf
      8dc//BmqDtAqXMDf/PRIaL88AcRiMUxPT2NkZASZTAaKomB2dhapVAqO34mfe7X2ayKRQDKZ
      RDKZZFEArVbr8ysCyUDXdTiO0xGrEgbXIxaJ95IDRpb+SOIOlQXPZrNt055twL7KLUs24Otx
      Vq2adgnZohFxNQyDOW4odonwbDQaiMfjqLgqGl77Ny8AViwVU4bBUhoty2JWk3w+D13XUS6X
      MT7eeZC0KHaGWY/4aymf23VdmKbJvgNA8fKnKDVaKJUd7J+Oo7x8HrkvPIzsym9wcbmM3fc8
      isN7dgDw8Po7HyNQOsMpeMWYx4OSnGi3CIKARdBOJQJUnHZ17pQOZA0fiuTc5XQ6jUZjg0sj
      Xi+k0+kuSwVZi/hklyg7sQj8oheVabqfTHPkxeRBVVVWmYxCfAEgY7SL8PpBuzSgqQYYHh7u
      6JOXtZldmiMKsqlTm5QnQEBJ/7rAlA0VSMVTME2THTVKYwybA5nFKIwIaH7oN3IiVqtV1Go1
      bN68GfBaeOvoJ9g2nsGpchkBMkhkx7D4+s9xSc3g8Tvi+OCF5/HRrxM4uG8bmpkZOBfOoSGk
      S4o4yzzlhJfv+0hpNg4OG7B9BXHVR+B1l58E2oRbLpf/+RBAlGdP13UUi8WOaNAwIpB9l+kK
      socfBiKn8n0fWd3FF0d01BxgNA54dkvK0cT2ZXJvWN/0f9pwMZPQUbTbdXCmzc7apqKJUSbz
      0wIC5If7RRkdgiBgh4qMjY1hbW0N6WQMY6MZXLxwAsvDO7FwRYFeXQJy08jUF7BScTAxswPV
      4go8cwgozGF+bgGVloOrB7uHEi5vJuXxuabMB4jp7dqvSkjRgtOnT+OWW275/PoBooBXdkks
      oRgUeoi0I8jc6TJFLmz7D4KAHa4sg3D5tzMvIcyqQhYPWpTi4dT9WpN0XYei6UDgw4s4O4Ha
      FXeaSqXScX5BL4daWNUK3vig6zp8p4mW6+K99z7Bgw8cQmFlEZ6RxsRwCqvLy1DiOYyPZKAE
      AerNFlLJBEuqIesXEa3neR0ZfYlEAgoC2K6H2NXsv8D3YNlt55sCH5btIGaagO/BdjzEzBjq
      tRpqtVr7wL5/jgQghsGKQFYWWXVg3uojM31Su3Stoihs0mWLmI5qXS9Qmib1S0cthY2PrCmD
      AinfBCIB8AeDRM1rlNWMv4+8tOL/PGNxHIf5V/iAOdrNySlIyUu5XI79RgSwdu5D/B8/fhf/
      27//dwCA468/iw/OLmNqz72Ycc7h2IVlTH/hMBLFz7BQsTC76xDuObCVjfefjQjEQy/vKvkN
      6KHLTGr03o98TKVHosCpLuJHP34RNTeFP/hX30FOVxH4Hl764V9j8oGvIbF6Au9+dB4ze+/F
      jL+Adz+dw847HsL9t20fZOgAgHpxEZ8tNnBw7y1t3H0XZ44fw/jeOzGCCp558edQEpPYtyWF
      9z46AyU1iq9/+ZG+POdh0I/JmJ9Pz+t2QokMp1arsV3ScRy2C/F5v3R9sVjE2bNnkcvl2HkH
      vtPAybk6bt+7hV2/5ifxvX/9Pfz85ZdQMIbwr/6bb+CVV56FZTnQdQOnzp3BHbunUS6XP9+O
      sOuBILh2JCY5p0QHGn8tWVpk1/R7CIeemsBXnvwKjv7qXbS8ADkdKFz+GC1jHIprY+cXH8DW
      3fvxzvHzWK07ePixL+HC5VUAnQQQFgF5DTzMXSlgLb8GoE0AtdIymitLmN/mQS+cRW73Xbhz
      6wRMQ8H47Fa8/fYH7YMqQlKZexkL+jEo9COqySwxNF7DMNjClzGboaEhDA0NodlsYm5urt1e
      4QTefO8CVpcvYu8X78f+LcPwHBuOY8EPDCiODduxESCOR7/xO2hUi/jFuyeYj6LZbP7z8gP0
      C7ycT1aKsGwn4kqpVKrDxAi0t/FKpRIZBuHbdTz7j3+FcysNLF++AFfT4bsAvDqe/tnrcOqL
      OHnmAmpr8zh68jLuufsOJBM6zpw+A0+RK2j8rtTNdTXs2bcPpn7t0WVGZrFjS9ukafkKTr75
      PF554314WhxebRXZ2V1IiKYiSb/8/MmgH9HnZgA9T99vH786PT2NoaEhbLv9a/if//2f44/+
      6A+xM93AeyfP48CWUfz1X/0dxr9wG3ZvSeNv/+oHmN55Oy58/Dae/tkrOHDnfUilUpiYmMDE
      xMT/N3cAUUTiK06I4hBdS3I+eVhp0sWanF19xVL4xnf/JapXzuDpj0+hWW9hV62Mz5bLePJb
      38TC6U9RHhrBy8/+GEVlCKWmi0ytiCtrdeRmrp3fRe+9+gMCuI4N13HhuB5UBVCUdqiD6zhA
      ZhJ/8Af/Ah+/9QLW6h7mTs9j34OP9ZwzmRm0q+c+/Smye8La7CWCyq4Rd4h77zqMSv4Kdmya
      xVhuB/7NnsNX/5nEv771nvbHHY9i96HONoMg+OepBK8XXNdFoVDoMvnxsShi+ZJ8Pg/TNKWR
      koBcCS4tnMYaprFzNqIGOYcTWaxEK5DM3m2aCt5+6WVcKFSxae8XUVlcxsN3bMWLv3gXvpnC
      Y48+iA/ffA2ju+7G3ftnMX95BZu3zEQqwUEQMAYg+080o4o49TLThl0n2+1kbfDvBNVqlbUh
      7pI8QxE/e56HbDbLROP/XxFAEAQsO4mfrLB4cnJ85fN5ZLNZqWz6/7Z3Zb1xJMn5q+qqvu/m
      JZIti9SMZixrdjXr3RkYNmCvd73GagfwkwE/GAb8B/zT9nGAxdpYwNac0sxImtE1EtUUaTbP
      ZpNdfVVf5YdWJLOzs44+eJiqDxBINasqq6siMiMjvoiQeTsIzjN5H3w/Ml4B6D7EWEQoFDrZ
      k3RNGKaKRNTdCyUqAF2PvrdYjoU/T7wOf77bmLLVVhxbdqzdZwSKitslLfGCz48tvq9LaQI5
      gWgNPNWWamdSYVy+SC7ZiyJllx66zNsxCdwYlVT3kxBAF403HSFk3i0n2Amz0/leAoJeI/F2
      s7sXyBJ4ZPdJz/Dk/XXx4H/+iAevj/Gr337ydimAoijY399HuVxmpCpF6bMSY7HYUM2fcrnM
      iGt8i07COC/ODZPY2YRRNqSiiePFJnca06tQT/rs7IJ1/L3IVhlYwLWf/A3yV9dx/9nLt0sB
      AGBlZQXpdHqoE42qqojH42g0Giwok0qlEIlEsL+/j2aziWw2i0wmM9bL8ypY42SvTQN2gutG
      R5D9306RRjGfnMamvzl5q/jjBpQAAZh7T/Dp3R/w87/9zdu1BwBOqA1iGRSgnwCj6zorgAsM
      JmscHBygVCqxjvJ87Uw32L1MPj1PURTWIGMUTOqCpIi5GO8g4fFizsjOE8dw+rsMTqsJMV2d
      NugAmL1P42lWG09erMEyq3hdC719K4Ci9KtGa9pwz1pqpGE3u+RyOeRyOZimiVKphIODA2ia
      hpmZmYHulHZw8nI4HeP0Xer1Ovudzh/1d8C+qfiows9fU3Ster2OFzOKHBRiT2fxnKFMNT2E
      TDSInXYCv/zF1bdvBQD6D5Zcona9uHhOiwieGtFut7G3t4dms4lUKoVUKmXrFXKD6AUC+gUA
      qkIpcQJFrxcWFqRj8hvA04DbZtlOgN1WAC9KpygKSqUScrnckJklmkA8KbHRaDBaOtB7+1YA
      wFkw+OCXruvM/1+v11leLm+yBINBLC31+xJUKhUUi0UWfaZKCaPeG//73t4erly5MvAZf4yq
      qtje3kY2mx1irI4ze4+CZrOJ/f19ZDIZ5p7llYLIblRVT5xc7OBltbCsfmvUTqfDHBS8ySZC
      VVXs7u4il8uxVRN4C92gBFpCZS5MeoCBQID1FEgkEgPRYpqVeVdcIpFAIpFAt9uFYRjY2NiA
      oiiYn5/3VFWCXiDfSUZRlIEVgT7jTZjl5WWsra3h6tWrEzFTR0U8HkelUkE0GsXBwQEUpU9C
      pGyt/f19xGIxNBoNzM/Pe76u1xUrHo8PFDcW3bD8c+Ip57yCvLUKoKoqUqkUyuWyredjoIak
      qrIZNhgMMkWQzTyBQIAVhur1etjd3XXMK+bH5etfArAV6HA4zLxVqqpiZWUFGxsbSKVS3BJ/
      uqDvbln9/me5XA7lbhgL6RBKO1sDXToNwxgoMGA3W4v7B/HvNCHxz5pvQEKf8b5/RVEGip0R
      FOUC9gc4S5DZwi+JwMkDTCQSrmW/DcNgxbfcNm2T3Kd4LUrurtfrA2MXi0Xouj6U73taILOQ
      yrF0AyGENQVts1+9IhgMsiizrIqd0zOzM+HC4TDK5fJAWy2+cLFpmohEIsyrRdRnMdKtKBew
      PPpZIxwOD1WPo31ArVZjVGkZRg04TQsUvaZivfy1FxcXsb29jUqlglwux4h90wDRiGUQ2bYh
      Pc5+l02wvV7PtnOnZVmsOp6iKAMrItDfexiGgWAwiHa7jXK5PPCeZufmUO5oKNcUxHULc6kU
      yqUSdnZ2kE6n0Ww2T8oqjvwULhFoE5tIJAY+J6Hy2l71NDeadqCaPzIsLi6iWq3i+fPnU/cA
      9WduYH/zBe599wPMjoXCswe4e/dLHNbbUBQFxVdPcPfuXdx/+BQts47v7n2J17tHaNePcP/r
      +zistQZMHNnz4+kqMio7mV3k1eFZvNWehldVBYctYKOmYL8VGDgvm80yBXyrFQA4UQK7sLqb
      Aohtec4KdhwY+ls+n0c+n8f29vZQvGNitA0UihWolV08KhTx6PFjzM7mEHzTxjYST2E2G8fL
      H19ha70ANZrAd/c+x5effYFgPIzPP/tq6HuIIK5Pu92W3n8mk+nXRHpjfs3OziIcDiORSKDe
      VQb6Sdc6fZMxl8shnU5D13Wk0+m+GTndJ/P/E7RR42FZJyX6nBCJRAaatU0LXlyYTsd0u13o
      uo65uTlUKpWp3d/25hr2qipu31pFXQliZSGO0sZr3Hv4DK1Of7XJzi8jG1Hw/oc/x8p7N5HS
      2lhcfheZiIKvv/oGD16sset5cYvK+jsHg0Ekk0nous5+JhIJhEIhpHSLlYpRAGSD/aw/qkJN
      plw8Hvf3AMBJlxjKFeBBiuBU+YH2EdNaBUiwpyG0VESKb3I3CapHh9DUMH58sYbbf/XXSKp1
      /PZf/wPazj18WzjAP3ywCMDC01d7+Pjvb2P72TeohJfw0fsLaJt/hvf/so7f/+ELAO6sVS+b
      ZP5Y5jZGBzdTGiptBVHNQkzpoN3uMfcy7zXyFeANRPcawW0TSa7Laa4AIhVgkmv3ej1WJpHK
      nkyCdz/4BdA4wN3CCzx98Rwf/+oT1Na+QsEI486vw/j0j/+NO7/8Ca5c/xBhFTgul/D142/x
      /ewKfv3BLP7w2VP83Z1PXJVcTMqRIRAIMJKiCA1AXAf6p2pDKzyVXHmr3aA8LMsa6ErCI5lM
      DuULi6hUKrb9DEaFXc2dcWEYBtrttlRQRGiahkqlwuIefJSVvDN26JrHqLRjyMTd51XaxMtW
      JTHQJwa5CESI09UuHj38HpnlG7i6kIECoFrexVEriOX5DLbWHuOwG8fNd6+icbiNJ2u7+IsP
      fwqt1/ZXAAJFXGUKQOzQWCxmK4ixWAz1ev1cPEJuSCQSePXqFWZmZhy9Qp1OBy9evEA6nWbF
      c9vtNmsSsry8LH0+JwgiHGij0Rh0HPB+d2C0lY2OodRTcfxQKIT//fEHWMEIvr33Oa7c+R2C
      gQZ+fPoah50ulsMz+OLZEa7oG3gejeDZZ3/COzc/RO/Na/IVgEMoFEIul2NlyAndbhfVahXt
      dhupVEoaaue7TU6qBKMwJ71iYWEB6+vrWFxclJZ5URQFxWIRN27cADBon6uqis3NTezv73ta
      RXjwM7wdJVqMDougDW6r1YKmaayU+szMDLrdLpbevYnuj49gLr2DfrGMCG5/dBtffvMdEM6i
      VvwT1joVhKNRHK4bMNrfI5dfxWxU9b1APMglmk6nkUqlpInjR0dHrNw4H4GlFWRcJqjbfU26
      gY1Go8jn8ygWi1KvULfbZYV4+T2IZfV7L+TzeSiKgq2trZHuW+Ze5j8TzRv6G5/ySIUDIpEI
      MplMv6KbprFnsvP8Acr6PD7+2XtQRf0JpfEv//bv+OinH2B1YRn5W3+Of/7H93D/201omuav
      ADIoisJC6WK7TrJbqW8AbxaRmXR8fDzR+KJ3AxjukDgOFEVBPp9HuVzG5uYmIpEIo0xsbm4O
      VGST3VMul4OmaSgWi4wB6zSW7F5lM7wo+CKowYbd+UeHB/j68Tf44dE13J6xELrxMzz5z0+x
      dVSFlppH9fkXqCffwW9WVrBZ38Hv/2sdd/7pd3339WXdBE/DgwL0Bf7o6Gio8R3NlvxMRJtN
      8hx59eWL9+iUPSWaX+NGeqkeaLFYRDAYRC6XQyKRkG7A+Z9An29EFGg7jLNxl/V90DSt38pI
      qNxBoO43BMoR8IJoNHp5FWBaIN4NFdslxOPxAcKVZfVbJZFS1Gq1ocK8MojCTtfi4eQpmYTq
      QNcQK1K7jW2aJorFIq5duyY9Zxzhl60ClI8hi9QTKE4zDi5tbdBpQlH6tXiSySTr7wX0C7uS
      D5qEhPez93q9gdxiL7Dzi8s+52fmcU0imm3t0jnthC4UCg2wL8VzZIpsdy1FURgxjaeh8+xR
      t2DZJPsufxPsAbTBlXWnMU1zqDGHoihs5hoVbsLs1I9g2nAy4fL5PNbX14fuhTf9vEa0LeuE
      qpBIJBCLxZhpOW2KiQhfASSQvXhFUaTuw+Pj4wGXKX98KpWyLak47v2Iv8swaeBMHFsGKlRr
      l1EnuontoCj9LDJKbDkLoefhK4AEdjRjO2GQ9bMFThJXnJJqvL5ssnVlM+wk1/U6tgwzMzMo
      FAq2bFMvppmmacy3f5aCT/AVQAI704XvgMjDrgUS2aexWMw2RjDuS3cjiY2yMRx31g2FQlhd
      XcXW1pZns4xiGvQzFAqd+azPw98ES0BswVqtxmxR2qSRq44XMGJb2kVYdV1HKpViQZ1KpeJa
      z+Ys4cVVSxAFlXKrDcOQulHt9gCUH+zk4TkL+CuADUhwq9Uqa0xNy7XshRFVwu5apERUiWJc
      V+FpwIvyOR2TzWZxfHyMzc1N197HpOzVatX2WZ4lfAWwAU+LIOpspVIZ8PjwaLVaODw89JRB
      Ri9+FI+OXYzgouDq1X6fLlljPDGQR/Txs/JmOeH87+ACg2x4WYtU2Qvs9XqujFDaGIvX8eIq
      9BJZHgejbMTtxrcsC8lkklHC7b6XpmmIRqNIJBLnPvsD/h7AFRQD0HUdpmkOBLfoJfN2b6PR
      YC/ZjvdCEeRerzdQ9tCttAphWtlidD+jBusoq0r8nAoLO1EkiEt1UdgH/grgARQDiEajyGQy
      0HWdmTKix4hYo2IpD/F6RPAat+fveZtCvFuWEIvFWNVtJwWddgbdJPAVYASQIiSTSWSzWSST
      SemLbLVaME0T1WrV0R1Jq0swGJT6wZ2EZFIlsGNrTgLLspDJZHBwcOB43NSrVEwAXwFGBCkB
      1Q0lbrqIZrPJatU4XYt4RlSFjue/eHFP8rz5Ub7DpDOw3XjJZBKGYTjyc86rCYgMvgJMCKox
      IxZvoiQOarFkB95FehZBoWlfW9ycE1W8UCigVCqxCYM8Xqqqsv5rFwG+AkwIcuslk0lkMpmh
      mc80TU8v27Is5kIdR0i9mkR2GVjjjisbO51O4/r161AUBevr63j48CHL6aU9k6zWz3nAzweY
      Iih34OjoaEDIMpmMa8STziOOPynNaZo2suP58dzGFnMSZH59TdPQaDSwvb2NQCCAra0trK6u
      QlVV5HI5zM3Neb7f04DvBp0ieO8OT6jzIsRkKvANOujcabZhdbsHMYndy8ripHTEGl1ZWYGi
      KFhdXcWDBw9YqZnzhq8ApwCKGQAnpo1bgwzKfjJNc8CFSgJ4VjazjGrttCH3mnrKf49bt24x
      B8B5w1eAU4AoDNVq1TX4QwJBP2u12kAi/GlAJryjeJS8ZHzxDcb5YwY63p8jzv8OLiFks3W9
      XkckEnHkv5DwW5bFqh5TzVGvbtFRlUXM2hqXc+Q0Nq9okUgEoVBoIAXyPOErwClA5vvvdDos
      +dwth5U8SxRpNgxDGnmVQRRErwI9bmCNp0Z4yQJzYtSeB3w36BnCiTItA5HxaMaktEEn2KVz
      npbAyRSMvFhi4TDAPqnovOCvAFMGz/YUUyvH2cjSasCX9h5ltj4rzpA4Dr9/4b1Lp1E5bxL4
      K8CUQa7QWCw2tOkdZ+YjBaDmD15yCOxWAa99ese5RxrX6Z5oRbtI8FeAUwD59KlxNN9FkrrM
      k7/fS1IIvycwDINFl90Ejs4VryUeMylkG3T+e/EKct4sVhG+ApwCaKajJJFwOMzKJlIZv1ar
      xZigXmZFEiJKJGk0GhOxKnnC3WkKpahwF4UDRPAV4BRBL582sZVKBaZpMs58p9NBIpHwTIAj
      oSUlIO+Q2/hOLsppp1rSWGLzav7+LxL8PcAZgbrH89HPTqfjmjMgA2207brIE3gqA++VEfk+
      XoXfzc8v/j7q9c8DvgKcEWhWTKfTiMfjzEZut9ueGaM8KLLsdUMsozgEAgHWS1hVVRQKBeam
      pOuS0Ou6jt3d3aGEdlk1N3G8i6wEvgKcMVRVRTweHyCCGYYxcpcJKU2YAAAB2ElEQVRJyibz
      mlwuztK9Xg+dTgfb29sol8swTRP7+/toNpvY29vDy5cvoaoqSqUSAKBcLjPB39nZwdpav9Xp
      y5cvsbGxMdRMZNQknfOCrwDnAEVRhvqNjWMfU6MOtwZ+dH0ZqCVUuVxGJpOBaZrY2dnB3Nwc
      CoUCWq0W7t27h1Qqhd3dXRiGgVqthuvXr2NzcxNzc3PQNA2Hh4cj3ftFga8A5wTqL8znBY97
      nXg8ztIp7WBnilAf4Wq1ing8PuC2nZ2dZR4q0YQiDxKZQLLNrvjvIsJPiDlHtFotWNbk5QEp
      vnB8fIxWq+WaiE9jaZqGvb09xGIxNJtN6LqOcDjMTKG5uTk0Gg2k02kYhoFWq4WlpSW8fv0a
      nU4HS0tLKBQK0DQN165dY3kLYsCN9wylUqmxlf004CvAJQLVMyUqtcwGl6VB0kwuHscn4shc
      qjw1gx+P3xjznwUCAWQymQu1Gvgm0CUCVVsm0pxM0GRuUNlPWZFb0bNDx8niDKIyAGDBwYsE
      PxB2yaBpGnRdH9n9yB8rrhJeUiKd/P90rYtUD4jgrwCXDJRU45Rt5VUx+CQZr5Fq8XeRJj0K
      Hfws4CvAJQPZ7m4l2N2UQBR+2XXskuadUiUvGhfo/wC7tVYxyKcEAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales By Catagory' width='192'>
      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
      1FoFieCyAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
